% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bgm.em.R
\name{bgm.em}
\alias{bgm.em}
\title{EM variable selection for a Markov Random Field model for ordinal variables.}
\usage{
bgm.em(
  x,
  precision = 0.975,
  convergence_criterion = sqrt(.Machine$double.eps),
  theta = 0.5,
  hierarchical = FALSE,
  indicator_alpha = 1,
  indicator_beta = 1,
  maximum_iterations = 1000,
  threshold_alpha = 1,
  threshold_beta = 1
)
}
\arguments{
\item{x}{An \code{no_persons} by \code{no_nodes} matrix containing the
categories coded as non-negative integers (i.e., coded
\code{0, 1, ..., no_categories}) for \code{no_persons} independent
observations on \code{no_nodes} variables in the network or graph.}

\item{precision}{A number between zero and one. The prior precision that is
desired for edge selection. Equal to one minus the desired type-1 error.
Defaults to \code{.975}.}

\item{convergence_criterion}{The convergence criterion for the
pseudoposterior values in the EM algorithm. Defaults to
\code{sqrt(.Machine$double.eps)}.}

\item{theta}{The prior inclusion probability. The value \code{theta = 0.5},
in combination with \code{hierarchical = FALSE} stipulates a uniform prior
on the space of network structures.}

\item{hierarchical}{Logical. If TRUE, a beta prior distribution is
imposed on the prior inclusion probability \code{theta} with
hyperparameters \code{alpha} and \code{beta}. A uniform prior on the
inclusion probability, a beta with \code{alpha = beta = 1}, stipulates a
uniform prior on network structure complexity.}

\item{indicator_alpha, indicator_beta}{The hyperparameters of the beta prior
distribution stipulated on the prior inclusion probability \code{theta} if
\code{hierarchical = TRUE}. Default to \code{1}.}

\item{maximum_iterations}{The maximum number of EM iterations used. Defaults
to \code{1e3}. A warning is issued if procedure has not converged in
\code{maximum_iterations} iterations.}

\item{threshold_alpha, threshold_beta}{The shape parameters of the Beta-prime
prior for the thresholds. Defaults to \code{1}.}
}
\value{
A list containing the \code{no_nodes} by \code{no_nodes} matrices
 \code{interactions} and \code{gamma}, the \code{no_nodes} by
 \code{no_categories} matrix \code{thresholds}, and, if
 \code{hierarchical == TRUE}, a numeric valued \code{theta}. The matrix
 \code{interactions} is a numeric matrix with pairwise
  association estimates on the off-diagonal elements. The matrix \code{gamma}
  contains the expected values of edge inclusion variables (i.e., the local
  posterior probability of edge inclusion. The matrix \code{thresholds}
  contains the category thresholds per node. If \code{hierarchical = TRUE},
  the modal estimate of the prior inclusion probability \code{theta} is also
  provided.
}
\description{
The function \code{bgm.em} selects promising edges for the ordinal
MRF using the joint pseudolikelihood and a continuous spike and slab prior
distribution stipulated on the MRF's interaction or association parameters.
}
\examples{
\dontrun{
 ##Analyse the Wenchuan dataset
 fit = bgm.em(x = Wenchuan)


 #------------------------------------------------------------------------------|
 # INCLUSION - EDGE WEIGHT PLOT
 #------------------------------------------------------------------------------|

 par(mar = c(6, 5, 1, 1))
 plot(x = fit$interactions[lower.tri(fit$interactions)],
      y = fit$gamma[lower.tri(fit$gamma)], ylim = c(0, 1),
      xlab = "", ylab = "", axes = FALSE, pch = 21, bg = "#bfbfbf", cex = 1.3)
 abline(h = 0, lty = 2, col = "#bfbfbf")
 abline(h = 1, lty = 2, col = "#bfbfbf")
 abline(h = .5, lty = 2, col = "#bfbfbf")
 mtext("Posterior Inclusion Probability", side = 1, line = 3, cex = 1.7)
 mtext("Posterior Mode Edge Weight", side = 2, line = 3, cex = 1.7)
 axis(1)
 axis(2, las = 1)


 #------------------------------------------------------------------------------|
 # THE LOCAL MEDIAN PROBABILITY NETWORK
 #------------------------------------------------------------------------------|

 library(qgraph) #For plotting the estimated network

 posterior.inclusion = fit$gamma[lower.tri(fit$gamma)]
 tmp = fit$interactions[lower.tri(fit$interactions)]
 tmp[posterior.inclusion < 0.5] = 0

 median.prob.model = matrix(0, nrow = ncol(Wenchuan), ncol = ncol(Wenchuan))
 median.prob.model[lower.tri(median.prob.model)] = tmp
 median.prob.model = median.prob.model + t(median.prob.model)

 rownames(median.prob.model) = colnames(Wenchuan)
 colnames(median.prob.model) = colnames(Wenchuan)

 qgraph(median.prob.model,
        theme = "TeamFortress",
        maximum = .5,
        fade = FALSE,
        color = c("#f0ae0e"), vsize = 10, repulsion = .9,
        label.cex = 1.1, label.scale = "FALSE",
        labels = colnames(Wenchuan))
}
}
